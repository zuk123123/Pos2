cd "$HOME/Рабочий стол/Pos2"

# 1) Убрать include moc из apiclient.cpp (если вдруг он остался)
sed -i '/#include "apiclient.moc"/d' src/net/apiclient.cpp

# 2) Обновить CMakeLists.txt: добавить QuickControls2 и линковку
tmp_cmake="$(mktemp)"
cat > "$tmp_cmake" <<'CMAKE'
cmake_minimum_required(VERSION 3.16)
project(Pos2 LANGUAGES CXX)

# ---- Qt / C++ ---------------------------------------------------------------
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_AUTOUIC ON)

# rcc: используем zlib (совместимо с Android)
set(CMAKE_AUTORCC_OPTIONS --compress-algo=zlib --compress 9)

find_package(Qt6 REQUIRED COMPONENTS Core Gui Qml Quick Network Sql QuickControls2)

# ---- include paths ----------------------------------------------------------
include_directories(
    ${CMAKE_SOURCE_DIR}/src/core
    ${CMAKE_SOURCE_DIR}/src/net
    ${CMAKE_SOURCE_DIR}/src/app
)

# ---- sources ----------------------------------------------------------------
file(GLOB SRC_CPP
    "${CMAKE_SOURCE_DIR}/src/core/*.cpp"
    "${CMAKE_SOURCE_DIR}/src/net/*.cpp"
    "${CMAKE_SOURCE_DIR}/src/app/*.cpp"
)
file(GLOB SRC_H
    "${CMAKE_SOURCE_DIR}/src/core/*.h"
    "${CMAKE_SOURCE_DIR}/src/net/*.h"
    "${CMAKE_SOURCE_DIR}/src/app/*.h"
)
file(GLOB QML_FILES "${CMAKE_SOURCE_DIR}/src/qml/*.qml")

qt_add_executable(Pos2
    MANUAL_FINALIZATION
    ${SRC_CPP}
    ${SRC_H}
    ${QML_FILES}
    resources.qrc
)

target_link_libraries(Pos2 PRIVATE
    Qt6::Core Qt6::Gui Qt6::Qml Qt6::Quick Qt6::Network Qt6::Sql Qt6::QuickControls2
)

# ---- дефолтные URL бэкенда --------------------------------------------------
set(POS2_EXT_URL "https://strategy-highs-cardiovascular-regression.trycloudflare.com")

if(ANDROID)
    target_compile_definitions(Pos2 PRIVATE
        POS2_API_BASE_DEFAULT="${POS2_EXT_URL}"
        POS2_API_BASE_FALLBACK="${POS2_EXT_URL}"
        POS2_PLATFORM_ANDROID=1
    )
else()
    target_compile_definitions(Pos2 PRIVATE
        POS2_API_BASE_DEFAULT="${POS2_EXT_URL}"
        POS2_API_BASE_FALLBACK="http://127.0.0.1:8080"
        POS2_PLATFORM_DESKTOP=1
    )
endif()

if(CMAKE_BUILD_TYPE STREQUAL "Debug")
    target_compile_definitions(Pos2 PRIVATE QT_QML_DEBUG)
endif()

set_target_properties(Pos2 PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}"
)

# ---- Копия локальной БД (desktop) -------------------------------------------
set(LOCAL_DB_SRC "${CMAKE_SOURCE_DIR}/resources/db/localdb.sqlite")
if(EXISTS "${LOCAL_DB_SRC}")
    add_custom_command(TARGET Pos2 POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy_if_different
                "${LOCAL_DB_SRC}"
                "$<TARGET_FILE_DIR:Pos2>/localdb.sqlite"
        VERBATIM
    )
endif()

# ---- ANDROID packaging -------------------------------------------------------
if(ANDROID)
    set(ANDROID_PKG_DIR "${CMAKE_SOURCE_DIR}/android")
    # свойство таргета — основной способ для Qt6:
    set_property(TARGET Pos2 PROPERTY QT_ANDROID_PACKAGE_SOURCE_DIR "${ANDROID_PKG_DIR}")
    # переменная — на всякий, чтобы androiddeployqt точно подхватил
    set(ANDROID_PACKAGE_SOURCE_DIR "${ANDROID_PKG_DIR}")
endif()

qt_finalize_executable(Pos2)

message(STATUS "Build type: ${CMAKE_BUILD_TYPE}")
CMAKE
mv "$tmp_cmake" CMakeLists.txt

# 3) (на всякий) создать android/res/values/libs.xml, если ещё нет
mkdir -p android/res/values
cat > android/res/values/libs.xml <<'XML'
<?xml version="1.0" encoding="utf-8"?>
<resources>
    <array name="qt_sources">
        <item>:/</item>
    </array>
</resources>
XML

# 4) Пересобрать Android-конфигурацию
cmake -S . -B build/Android_Qt_6_9_2_Clang_arm64_v8a-RelWithDebInfo -G Ninja \
  -D CMAKE_BUILD_TYPE=RelWithDebInfo \
  -D CMAKE_TOOLCHAIN_FILE="$HOME/Qt/6.9.2/android_arm64_v8a/lib/cmake/Qt6/qt.toolchain.cmake"

cmake --build build/Android_Qt_6_9_2_Clang_arm64_v8a-RelWithDebInfo --target all


